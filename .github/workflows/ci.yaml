name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_image:
    runs-on: ubuntu-latest
    # if: 'contains(github.event.head_commit.message, ''[skip ci]'')'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to GitHub Container Registry
        run: >-
          echo "${{ secrets.GHCR_PAT}}" | docker login ghcr.io -u ${{
          github.actor }} --password-stdin
      - name: Build and push Docker image
        run: >
          docker build -t ghcr.io/jmuachifi/loginapp:${{ github.sha
          }} .

          docker push ghcr.io/jmuachifi/loginapp:${{ github.sha }}

  update_helm_chart:
    runs-on: ubuntu-latest
    needs: build_image
    # if: 'contains(github.event.head_commit.message, ''[skip ci]'')'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up SSH for Git operations
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - name: Configure Git user information
        run: |
          git config --global user.email "jmuachifi@gmail.com"
          git config --global user.name "Jodionisio Muachifi"
          # git clone https://gitlab.com/jmuachifi/login-app-argocd.git
          ls -al
      - name: Update Helm chart with new image tag
        run: |
          sed -i "s/tag:.*/tag: ${{ github.sha }}/g" manifests/values.yaml
          git add manifests/values.yaml
          git commit -m "Update image tag to ${{ github.sha }}"
          git push https://jmuachifi:${{ secrets.GHCR_PAT}}@github.com/jmuachifi/login-app-argocd.git main

  deploy_to_argocd:
      runs-on: ubuntu-latest
      needs: update_helm_chart
      # if: '! contains(github.event.head_commit.message, ''[skip ci]'')'
      steps:
        - name: Trigger ArgoCD Sync
          run: >
            # Ensure `argocd` CLI is installed
  
            sudo curl -sSL -o /usr/local/bin/argocd
            https://github.com/argoproj/argo-cd/releases/download/v2.4.0/argocd-linux-amd64
  
            sudo chmod +x /usr/local/bin/argocd
  
  
            # Log into ArgoCD using secrets
  
            argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{
            secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }}
            --insecure
  
  
            # Sync ArgoCD application
  
            argocd app sync login-app-argocd
